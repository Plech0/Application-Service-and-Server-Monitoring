input {
	beats {
		port => 5044
	}
}

##Add filters to logs


filter {
    if [log][file][path] =~ "/var/log/apache2/.*access.*.log" {
        mutate {
            add_field => { "log_type" => "access_apache" }
        }
        grok {
            match => { "message" => "(?:%{IPORHOST:virtualhost} ){0,1}%{HTTPD_COMBINEDLOG}"}
        }
        geoip {
            source => "clientip"
        }
        useragent {
            source => "message"
        }

        if [request] =~ ".*assets.*"{
            mutate {
                add_field => { "request_type" => "asset" }
            }
        } else {
            mutate {
                add_field => { "request_type" => "page" }
            }
        }
    }
    else if [log][file][path] =~ "/var/log/apache2/.*error.*.log" {
        mutate {
            add_field => { "log_type" => "error_apache" }
        }
        grok {
            match => {
                "message" => "\[%{HTTPDERROR_DATE:timestamp}\] \[%{WORD:module}:%{LOGLEVEL:loglevel}\] \[pid %{POSINT:pid}(:tid %{NUMBER:tid})?\]( \(%{POSINT:proxy_errorcode}\)%{DATA:proxy_message}:)?( \[client %{IPORHOST:clientip}:%{POSINT:clientport}\])?( %{DATA:errorcode}:)? %{GREEDYDATA:error_msg}"
            }
        }
    }
    else if [log][file][path] =~ "/www.*/runtime/logs/" {
        mutate {
            add_field => { "log_type" => "aplication_log" }
            copy => { "[log][file][path]" => "path" }
        }
        mutate {
            split => ["path", "/"]
            add_field => [ "domain", "%{[path][4]}" ]
        }
        mutate {
            remove_field => [ "path" ]
        }
        grok {
            match => {
                "message" => "%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND} \[(%{IP:clientip}|-)\]\[(%{POSINT:userid}|-)\]\[(%{POSINT:sessionid}|-)\]\[%{LOGLEVEL:loglevel}\]\[%{DATA:category}\] %{GREEDYDATA:error_msg}"
            }
        }
        if "_grokparsefailure" in [tags] {
          drop { }
        }
    }
    else {
        mutate {
            add_field => {
                "log_type" => "others_logs"
            }
        }
    }
}

## Add your filters / logstash plugins configuration here

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
        index => "%{[@metadata][beat]}-%{[agent][hostname]}-%{+YYYY.MM.dd}"
	}
}

version: '3.3'
services:
  web:
    build:
      context: ./servers/app
      dockerfile: Dockerfile
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app:delegated
    ports:
      - '80:80'
    environment:
      PHP_ENABLE_XDEBUG: 1
      XDEBUG_CONFIG: remote_host=host.docker.internal

  mysql:
    image: mariadb:latest
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=server_monitoring
      - MYSQL_USER=server_monitoring
      - MYSQL_PASSWORD=server_monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:consistent
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    ports:
      - "9600:9600"
      - "5000:5000"
    depends_on:
      - 'elasticsearch'
    volumes:
      - ./elk/logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:consistent
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - "5601:5601"
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:consistent

  staging:
    build:
      context: ./servers
      dockerfile: Dockerfile
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./servers/staging:/var/www/html:delegated
    ports:
      - '81:80'

#  perseus:
#    build:
#      context: ./servers
#      dockerfile: Dockerfile
#    volumes:
#      - ~/.composer-docker/cache:/root/.composer/cache:delegated
#      - ./servers/perseus:/var/www/html:delegated
#    ports:
#      - '82:80'
#
  zeus:
    build:
      context: ./servers
      dockerfile: Dockerfile
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./servers/zeus:/var/www/html:delegated
    ports:
      - '83:80'
